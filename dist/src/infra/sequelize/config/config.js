require("dotenv").config();
const Sequelize = require("sequelize");
const { EDEKEE_DB_USER, EDEKEE_DB_PASS, EDEKEE_DB_HOST, EDEKEE_DB_DEV_DB_NAME, EDEKEE_DB_TEST_DB_NAME, EDEKEE_DB_PROD_DB_NAME, NODE_ENV } = process.env;
const databaseCredentials = {
    development: {
        username: EDEKEE_DB_USER,
        password: EDEKEE_DB_PASS,
        database: EDEKEE_DB_DEV_DB_NAME,
        host: EDEKEE_DB_HOST,
        dialect: "mysql"
    },
    test: {
        username: EDEKEE_DB_USER,
        password: EDEKEE_DB_PASS,
        database: EDEKEE_DB_TEST_DB_NAME,
        host: EDEKEE_DB_HOST,
        dialect: "mysql"
    },
    production: {
        username: EDEKEE_DB_USER,
        password: EDEKEE_DB_PASS,
        database: EDEKEE_DB_PROD_DB_NAME,
        host: EDEKEE_DB_HOST,
        dialect: "mysql"
    }
};
const { username, password, database, host, dialect } = databaseCredentials[NODE_ENV];
module.exports = databaseCredentials;
module.exports.connection = new Sequelize(database, username, password, {
    host,
    dialect,
    port: 3306,
    dialectOptions: {
        multipleStatements: true
    },
    pool: {
        max: 5,
        min: 0,
        idle: 10000
    },
    logging: false
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2luZnJhL3NlcXVlbGl6ZS9jb25maWcvY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQTtBQUMxQixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUE7QUFFdEMsTUFBTSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUE7QUFFdkosTUFBTSxtQkFBbUIsR0FBRztJQUMxQixXQUFXLEVBQUU7UUFDWCxRQUFRLEVBQUUsY0FBYztRQUN4QixRQUFRLEVBQUUsY0FBYztRQUN4QixRQUFRLEVBQUUscUJBQXFCO1FBQy9CLElBQUksRUFBRSxjQUFjO1FBQ3BCLE9BQU8sRUFBRSxPQUFPO0tBQ2pCO0lBQ0QsSUFBSSxFQUFFO1FBQ0osUUFBUSxFQUFFLGNBQWM7UUFDeEIsUUFBUSxFQUFFLGNBQWM7UUFDeEIsUUFBUSxFQUFFLHNCQUFzQjtRQUNoQyxJQUFJLEVBQUUsY0FBYztRQUNwQixPQUFPLEVBQUUsT0FBTztLQUNqQjtJQUNELFVBQVUsRUFBRTtRQUNWLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLFFBQVEsRUFBRSxzQkFBc0I7UUFDaEMsSUFBSSxFQUFFLGNBQWM7UUFDcEIsT0FBTyxFQUFFLE9BQU87S0FDakI7Q0FDRixDQUFBO0FBRUQsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsQ0FBQTtBQUVyRixNQUFNLENBQUMsT0FBTyxHQUFHLG1CQUFtQixDQUFBO0FBRXBDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxHQUFHLElBQUksU0FBUyxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFO0lBQ3RFLElBQUk7SUFDSixPQUFPO0lBQ1AsSUFBSSxFQUFFLElBQUk7SUFDVixjQUFjLEVBQUU7UUFDZCxrQkFBa0IsRUFBRSxJQUFJO0tBQ3pCO0lBQ0QsSUFBSSxFQUFFO1FBQ0osR0FBRyxFQUFFLENBQUM7UUFDTixHQUFHLEVBQUUsQ0FBQztRQUNOLElBQUksRUFBRSxLQUFLO0tBQ1o7SUFDRCxPQUFPLEVBQUUsS0FBSztDQUNmLENBQUMsQ0FBQSJ9